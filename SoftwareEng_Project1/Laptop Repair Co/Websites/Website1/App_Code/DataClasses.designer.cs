#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertLEGAL_CUSTOMER(LEGAL_CUSTOMER instance);
  partial void UpdateLEGAL_CUSTOMER(LEGAL_CUSTOMER instance);
  partial void DeleteLEGAL_CUSTOMER(LEGAL_CUSTOMER instance);
  partial void InsertPROBLEM(PROBLEM instance);
  partial void UpdatePROBLEM(PROBLEM instance);
  partial void DeletePROBLEM(PROBLEM instance);
  partial void InsertLAPTOP(LAPTOP instance);
  partial void UpdateLAPTOP(LAPTOP instance);
  partial void DeleteLAPTOP(LAPTOP instance);
  partial void InsertCLERK(CLERK instance);
  partial void UpdateCLERK(CLERK instance);
  partial void DeleteCLERK(CLERK instance);
  partial void InsertTECHNICIAN(TECHNICIAN instance);
  partial void UpdateTECHNICIAN(TECHNICIAN instance);
  partial void DeleteTECHNICIAN(TECHNICIAN instance);
  partial void InsertWORK_ORDER(WORK_ORDER instance);
  partial void UpdateWORK_ORDER(WORK_ORDER instance);
  partial void DeleteWORK_ORDER(WORK_ORDER instance);
  partial void InsertREAL_CUSTOMER(REAL_CUSTOMER instance);
  partial void UpdateREAL_CUSTOMER(REAL_CUSTOMER instance);
  partial void DeleteREAL_CUSTOMER(REAL_CUSTOMER instance);
  partial void InsertMR_CODE(MR_CODE instance);
  partial void UpdateMR_CODE(MR_CODE instance);
  partial void DeleteMR_CODE(MR_CODE instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<LEGAL_CUSTOMER> LEGAL_CUSTOMERs
	{
		get
		{
			return this.GetTable<LEGAL_CUSTOMER>();
		}
	}
	
	public System.Data.Linq.Table<PROBLEM> PROBLEMs
	{
		get
		{
			return this.GetTable<PROBLEM>();
		}
	}
	
	public System.Data.Linq.Table<LAPTOP> LAPTOPs
	{
		get
		{
			return this.GetTable<LAPTOP>();
		}
	}
	
	public System.Data.Linq.Table<CLERK> CLERKs
	{
		get
		{
			return this.GetTable<CLERK>();
		}
	}
	
	public System.Data.Linq.Table<TECHNICIAN> TECHNICIANs
	{
		get
		{
			return this.GetTable<TECHNICIAN>();
		}
	}
	
	public System.Data.Linq.Table<WORK_ORDER> WORK_ORDERs
	{
		get
		{
			return this.GetTable<WORK_ORDER>();
		}
	}
	
	public System.Data.Linq.Table<REAL_CUSTOMER> REAL_CUSTOMERs
	{
		get
		{
			return this.GetTable<REAL_CUSTOMER>();
		}
	}
	
	public System.Data.Linq.Table<MR_CODE> MR_CODEs
	{
		get
		{
			return this.GetTable<MR_CODE>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LEGAL_CUSTOMER")]
public partial class LEGAL_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _LCST_ID;
	
	private string _LCST_CONAME;
	
	private string _LCST_ADD;
	
	private string _LCST_TEL;
	
	private string _LCST_EMAIL;
	
	private EntitySet<REAL_CUSTOMER> _REAL_CUSTOMERs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLCST_IDChanging(string value);
    partial void OnLCST_IDChanged();
    partial void OnLCST_CONAMEChanging(string value);
    partial void OnLCST_CONAMEChanged();
    partial void OnLCST_ADDChanging(string value);
    partial void OnLCST_ADDChanged();
    partial void OnLCST_TELChanging(string value);
    partial void OnLCST_TELChanged();
    partial void OnLCST_EMAILChanging(string value);
    partial void OnLCST_EMAILChanged();
    #endregion
	
	public LEGAL_CUSTOMER()
	{
		this._REAL_CUSTOMERs = new EntitySet<REAL_CUSTOMER>(new Action<REAL_CUSTOMER>(this.attach_REAL_CUSTOMERs), new Action<REAL_CUSTOMER>(this.detach_REAL_CUSTOMERs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LCST_ID
	{
		get
		{
			return this._LCST_ID;
		}
		set
		{
			if ((this._LCST_ID != value))
			{
				this.OnLCST_IDChanging(value);
				this.SendPropertyChanging();
				this._LCST_ID = value;
				this.SendPropertyChanged("LCST_ID");
				this.OnLCST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_CONAME", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string LCST_CONAME
	{
		get
		{
			return this._LCST_CONAME;
		}
		set
		{
			if ((this._LCST_CONAME != value))
			{
				this.OnLCST_CONAMEChanging(value);
				this.SendPropertyChanging();
				this._LCST_CONAME = value;
				this.SendPropertyChanged("LCST_CONAME");
				this.OnLCST_CONAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_ADD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LCST_ADD
	{
		get
		{
			return this._LCST_ADD;
		}
		set
		{
			if ((this._LCST_ADD != value))
			{
				this.OnLCST_ADDChanging(value);
				this.SendPropertyChanging();
				this._LCST_ADD = value;
				this.SendPropertyChanged("LCST_ADD");
				this.OnLCST_ADDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_TEL", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string LCST_TEL
	{
		get
		{
			return this._LCST_TEL;
		}
		set
		{
			if ((this._LCST_TEL != value))
			{
				this.OnLCST_TELChanging(value);
				this.SendPropertyChanging();
				this._LCST_TEL = value;
				this.SendPropertyChanged("LCST_TEL");
				this.OnLCST_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_EMAIL", DbType="NVarChar(30)")]
	public string LCST_EMAIL
	{
		get
		{
			return this._LCST_EMAIL;
		}
		set
		{
			if ((this._LCST_EMAIL != value))
			{
				this.OnLCST_EMAILChanging(value);
				this.SendPropertyChanging();
				this._LCST_EMAIL = value;
				this.SendPropertyChanged("LCST_EMAIL");
				this.OnLCST_EMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LEGAL_CUSTOMER_REAL_CUSTOMER", Storage="_REAL_CUSTOMERs", ThisKey="LCST_ID", OtherKey="LCST_ID")]
	public EntitySet<REAL_CUSTOMER> REAL_CUSTOMERs
	{
		get
		{
			return this._REAL_CUSTOMERs;
		}
		set
		{
			this._REAL_CUSTOMERs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_REAL_CUSTOMERs(REAL_CUSTOMER entity)
	{
		this.SendPropertyChanging();
		entity.LEGAL_CUSTOMER = this;
	}
	
	private void detach_REAL_CUSTOMERs(REAL_CUSTOMER entity)
	{
		this.SendPropertyChanging();
		entity.LEGAL_CUSTOMER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROBLEM")]
public partial class PROBLEM : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _PROBLEM_ID;
	
	private string _PROBLEM_DISC;
	
	private EntitySet<MR_CODE> _MR_CODEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPROBLEM_IDChanging(string value);
    partial void OnPROBLEM_IDChanged();
    partial void OnPROBLEM_DISCChanging(string value);
    partial void OnPROBLEM_DISCChanged();
    #endregion
	
	public PROBLEM()
	{
		this._MR_CODEs = new EntitySet<MR_CODE>(new Action<MR_CODE>(this.attach_MR_CODEs), new Action<MR_CODE>(this.detach_MR_CODEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROBLEM_ID", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string PROBLEM_ID
	{
		get
		{
			return this._PROBLEM_ID;
		}
		set
		{
			if ((this._PROBLEM_ID != value))
			{
				this.OnPROBLEM_IDChanging(value);
				this.SendPropertyChanging();
				this._PROBLEM_ID = value;
				this.SendPropertyChanged("PROBLEM_ID");
				this.OnPROBLEM_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROBLEM_DISC", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string PROBLEM_DISC
	{
		get
		{
			return this._PROBLEM_DISC;
		}
		set
		{
			if ((this._PROBLEM_DISC != value))
			{
				this.OnPROBLEM_DISCChanging(value);
				this.SendPropertyChanging();
				this._PROBLEM_DISC = value;
				this.SendPropertyChanged("PROBLEM_DISC");
				this.OnPROBLEM_DISCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROBLEM_MR_CODE", Storage="_MR_CODEs", ThisKey="PROBLEM_ID", OtherKey="PROBLEM_ID")]
	public EntitySet<MR_CODE> MR_CODEs
	{
		get
		{
			return this._MR_CODEs;
		}
		set
		{
			this._MR_CODEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.PROBLEM = this;
	}
	
	private void detach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.PROBLEM = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAPTOP")]
public partial class LAPTOP : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _LAPTOP_ID;
	
	private string _LAPTOP_NAME;
	
	private string _LAPTOP_MODEL;
	
	private string _LAPTOP_SERIAL;
	
	private string _LAPTOP_GUARANTY_TYPE;
	
	private EntitySet<MR_CODE> _MR_CODEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLAPTOP_IDChanging(string value);
    partial void OnLAPTOP_IDChanged();
    partial void OnLAPTOP_NAMEChanging(string value);
    partial void OnLAPTOP_NAMEChanged();
    partial void OnLAPTOP_MODELChanging(string value);
    partial void OnLAPTOP_MODELChanged();
    partial void OnLAPTOP_SERIALChanging(string value);
    partial void OnLAPTOP_SERIALChanged();
    partial void OnLAPTOP_GUARANTY_TYPEChanging(string value);
    partial void OnLAPTOP_GUARANTY_TYPEChanged();
    #endregion
	
	public LAPTOP()
	{
		this._MR_CODEs = new EntitySet<MR_CODE>(new Action<MR_CODE>(this.attach_MR_CODEs), new Action<MR_CODE>(this.detach_MR_CODEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_ID", DbType="NChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LAPTOP_ID
	{
		get
		{
			return this._LAPTOP_ID;
		}
		set
		{
			if ((this._LAPTOP_ID != value))
			{
				this.OnLAPTOP_IDChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_ID = value;
				this.SendPropertyChanged("LAPTOP_ID");
				this.OnLAPTOP_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_NAME", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string LAPTOP_NAME
	{
		get
		{
			return this._LAPTOP_NAME;
		}
		set
		{
			if ((this._LAPTOP_NAME != value))
			{
				this.OnLAPTOP_NAMEChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_NAME = value;
				this.SendPropertyChanged("LAPTOP_NAME");
				this.OnLAPTOP_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_MODEL", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string LAPTOP_MODEL
	{
		get
		{
			return this._LAPTOP_MODEL;
		}
		set
		{
			if ((this._LAPTOP_MODEL != value))
			{
				this.OnLAPTOP_MODELChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_MODEL = value;
				this.SendPropertyChanged("LAPTOP_MODEL");
				this.OnLAPTOP_MODELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_SERIAL", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string LAPTOP_SERIAL
	{
		get
		{
			return this._LAPTOP_SERIAL;
		}
		set
		{
			if ((this._LAPTOP_SERIAL != value))
			{
				this.OnLAPTOP_SERIALChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_SERIAL = value;
				this.SendPropertyChanged("LAPTOP_SERIAL");
				this.OnLAPTOP_SERIALChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_GUARANTY_TYPE", DbType="NVarChar(10)")]
	public string LAPTOP_GUARANTY_TYPE
	{
		get
		{
			return this._LAPTOP_GUARANTY_TYPE;
		}
		set
		{
			if ((this._LAPTOP_GUARANTY_TYPE != value))
			{
				this.OnLAPTOP_GUARANTY_TYPEChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_GUARANTY_TYPE = value;
				this.SendPropertyChanged("LAPTOP_GUARANTY_TYPE");
				this.OnLAPTOP_GUARANTY_TYPEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_MR_CODE", Storage="_MR_CODEs", ThisKey="LAPTOP_ID", OtherKey="LAPTOP_ID")]
	public EntitySet<MR_CODE> MR_CODEs
	{
		get
		{
			return this._MR_CODEs;
		}
		set
		{
			this._MR_CODEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.LAPTOP = this;
	}
	
	private void detach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.LAPTOP = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLERK")]
public partial class CLERK : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CLERK_ID;
	
	private string _CLERK_FNAME;
	
	private string _CLERK_LNAME;
	
	private int _CLERK_PROFESSION;
	
	private string _CLERK_CODE;
	
	private string _CLERK_ADD;
	
	private string _CLERK_MOBILE;
	
	private string _CLERK_USERNAME;
	
	private string _CLERK_PASSWORD;
	
	private EntitySet<WORK_ORDER> _WORK_ORDERs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLERK_IDChanging(string value);
    partial void OnCLERK_IDChanged();
    partial void OnCLERK_FNAMEChanging(string value);
    partial void OnCLERK_FNAMEChanged();
    partial void OnCLERK_LNAMEChanging(string value);
    partial void OnCLERK_LNAMEChanged();
    partial void OnCLERK_PROFESSIONChanging(int value);
    partial void OnCLERK_PROFESSIONChanged();
    partial void OnCLERK_CODEChanging(string value);
    partial void OnCLERK_CODEChanged();
    partial void OnCLERK_ADDChanging(string value);
    partial void OnCLERK_ADDChanged();
    partial void OnCLERK_MOBILEChanging(string value);
    partial void OnCLERK_MOBILEChanged();
    partial void OnCLERK_USERNAMEChanging(string value);
    partial void OnCLERK_USERNAMEChanged();
    partial void OnCLERK_PASSWORDChanging(string value);
    partial void OnCLERK_PASSWORDChanged();
    #endregion
	
	public CLERK()
	{
		this._WORK_ORDERs = new EntitySet<WORK_ORDER>(new Action<WORK_ORDER>(this.attach_WORK_ORDERs), new Action<WORK_ORDER>(this.detach_WORK_ORDERs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CLERK_ID
	{
		get
		{
			return this._CLERK_ID;
		}
		set
		{
			if ((this._CLERK_ID != value))
			{
				this.OnCLERK_IDChanging(value);
				this.SendPropertyChanging();
				this._CLERK_ID = value;
				this.SendPropertyChanged("CLERK_ID");
				this.OnCLERK_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_FNAME", DbType="NVarChar(50)")]
	public string CLERK_FNAME
	{
		get
		{
			return this._CLERK_FNAME;
		}
		set
		{
			if ((this._CLERK_FNAME != value))
			{
				this.OnCLERK_FNAMEChanging(value);
				this.SendPropertyChanging();
				this._CLERK_FNAME = value;
				this.SendPropertyChanged("CLERK_FNAME");
				this.OnCLERK_FNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_LNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CLERK_LNAME
	{
		get
		{
			return this._CLERK_LNAME;
		}
		set
		{
			if ((this._CLERK_LNAME != value))
			{
				this.OnCLERK_LNAMEChanging(value);
				this.SendPropertyChanging();
				this._CLERK_LNAME = value;
				this.SendPropertyChanged("CLERK_LNAME");
				this.OnCLERK_LNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_PROFESSION", DbType="Int NOT NULL")]
	public int CLERK_PROFESSION
	{
		get
		{
			return this._CLERK_PROFESSION;
		}
		set
		{
			if ((this._CLERK_PROFESSION != value))
			{
				this.OnCLERK_PROFESSIONChanging(value);
				this.SendPropertyChanging();
				this._CLERK_PROFESSION = value;
				this.SendPropertyChanged("CLERK_PROFESSION");
				this.OnCLERK_PROFESSIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_CODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string CLERK_CODE
	{
		get
		{
			return this._CLERK_CODE;
		}
		set
		{
			if ((this._CLERK_CODE != value))
			{
				this.OnCLERK_CODEChanging(value);
				this.SendPropertyChanging();
				this._CLERK_CODE = value;
				this.SendPropertyChanged("CLERK_CODE");
				this.OnCLERK_CODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_ADD", DbType="NVarChar(50)")]
	public string CLERK_ADD
	{
		get
		{
			return this._CLERK_ADD;
		}
		set
		{
			if ((this._CLERK_ADD != value))
			{
				this.OnCLERK_ADDChanging(value);
				this.SendPropertyChanging();
				this._CLERK_ADD = value;
				this.SendPropertyChanged("CLERK_ADD");
				this.OnCLERK_ADDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_MOBILE", DbType="NChar(15)")]
	public string CLERK_MOBILE
	{
		get
		{
			return this._CLERK_MOBILE;
		}
		set
		{
			if ((this._CLERK_MOBILE != value))
			{
				this.OnCLERK_MOBILEChanging(value);
				this.SendPropertyChanging();
				this._CLERK_MOBILE = value;
				this.SendPropertyChanged("CLERK_MOBILE");
				this.OnCLERK_MOBILEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_USERNAME", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
	public string CLERK_USERNAME
	{
		get
		{
			return this._CLERK_USERNAME;
		}
		set
		{
			if ((this._CLERK_USERNAME != value))
			{
				this.OnCLERK_USERNAMEChanging(value);
				this.SendPropertyChanging();
				this._CLERK_USERNAME = value;
				this.SendPropertyChanged("CLERK_USERNAME");
				this.OnCLERK_USERNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_PASSWORD", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
	public string CLERK_PASSWORD
	{
		get
		{
			return this._CLERK_PASSWORD;
		}
		set
		{
			if ((this._CLERK_PASSWORD != value))
			{
				this.OnCLERK_PASSWORDChanging(value);
				this.SendPropertyChanging();
				this._CLERK_PASSWORD = value;
				this.SendPropertyChanged("CLERK_PASSWORD");
				this.OnCLERK_PASSWORDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLERK_WORK_ORDER", Storage="_WORK_ORDERs", ThisKey="CLERK_ID", OtherKey="CLERK_ID")]
	public EntitySet<WORK_ORDER> WORK_ORDERs
	{
		get
		{
			return this._WORK_ORDERs;
		}
		set
		{
			this._WORK_ORDERs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.CLERK = this;
	}
	
	private void detach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.CLERK = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TECHNICIAN")]
public partial class TECHNICIAN : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _TECH_ID;
	
	private string _TECH_LNAME;
	
	private string _TECH_CODE;
	
	private string _TECH_FNAME;
	
	private EntitySet<WORK_ORDER> _WORK_ORDERs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTECH_IDChanging(string value);
    partial void OnTECH_IDChanged();
    partial void OnTECH_LNAMEChanging(string value);
    partial void OnTECH_LNAMEChanged();
    partial void OnTECH_CODEChanging(string value);
    partial void OnTECH_CODEChanged();
    partial void OnTECH_FNAMEChanging(string value);
    partial void OnTECH_FNAMEChanged();
    #endregion
	
	public TECHNICIAN()
	{
		this._WORK_ORDERs = new EntitySet<WORK_ORDER>(new Action<WORK_ORDER>(this.attach_WORK_ORDERs), new Action<WORK_ORDER>(this.detach_WORK_ORDERs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TECH_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TECH_ID
	{
		get
		{
			return this._TECH_ID;
		}
		set
		{
			if ((this._TECH_ID != value))
			{
				this.OnTECH_IDChanging(value);
				this.SendPropertyChanging();
				this._TECH_ID = value;
				this.SendPropertyChanged("TECH_ID");
				this.OnTECH_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TECH_LNAME", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string TECH_LNAME
	{
		get
		{
			return this._TECH_LNAME;
		}
		set
		{
			if ((this._TECH_LNAME != value))
			{
				this.OnTECH_LNAMEChanging(value);
				this.SendPropertyChanging();
				this._TECH_LNAME = value;
				this.SendPropertyChanged("TECH_LNAME");
				this.OnTECH_LNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TECH_CODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string TECH_CODE
	{
		get
		{
			return this._TECH_CODE;
		}
		set
		{
			if ((this._TECH_CODE != value))
			{
				this.OnTECH_CODEChanging(value);
				this.SendPropertyChanging();
				this._TECH_CODE = value;
				this.SendPropertyChanged("TECH_CODE");
				this.OnTECH_CODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TECH_FNAME", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string TECH_FNAME
	{
		get
		{
			return this._TECH_FNAME;
		}
		set
		{
			if ((this._TECH_FNAME != value))
			{
				this.OnTECH_FNAMEChanging(value);
				this.SendPropertyChanging();
				this._TECH_FNAME = value;
				this.SendPropertyChanged("TECH_FNAME");
				this.OnTECH_FNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TECHNICIAN_WORK_ORDER", Storage="_WORK_ORDERs", ThisKey="TECH_ID", OtherKey="TECH_ID")]
	public EntitySet<WORK_ORDER> WORK_ORDERs
	{
		get
		{
			return this._WORK_ORDERs;
		}
		set
		{
			this._WORK_ORDERs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.TECHNICIAN = this;
	}
	
	private void detach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.TECHNICIAN = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WORK_ORDER")]
public partial class WORK_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _WO_ID;
	
	private System.DateTime _WO_DATE;
	
	private string _WO_STARTTIME;
	
	private string _WO_DUR;
	
	private string _CLERK_ID;
	
	private string _TECH_ID;
	
	private string _MRC_ID;
	
	private EntityRef<CLERK> _CLERK;
	
	private EntityRef<TECHNICIAN> _TECHNICIAN;
	
	private EntityRef<MR_CODE> _MR_CODE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWO_IDChanging(string value);
    partial void OnWO_IDChanged();
    partial void OnWO_DATEChanging(System.DateTime value);
    partial void OnWO_DATEChanged();
    partial void OnWO_STARTTIMEChanging(string value);
    partial void OnWO_STARTTIMEChanged();
    partial void OnWO_DURChanging(string value);
    partial void OnWO_DURChanged();
    partial void OnCLERK_IDChanging(string value);
    partial void OnCLERK_IDChanged();
    partial void OnTECH_IDChanging(string value);
    partial void OnTECH_IDChanged();
    partial void OnMRC_IDChanging(string value);
    partial void OnMRC_IDChanged();
    #endregion
	
	public WORK_ORDER()
	{
		this._CLERK = default(EntityRef<CLERK>);
		this._TECHNICIAN = default(EntityRef<TECHNICIAN>);
		this._MR_CODE = default(EntityRef<MR_CODE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WO_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string WO_ID
	{
		get
		{
			return this._WO_ID;
		}
		set
		{
			if ((this._WO_ID != value))
			{
				this.OnWO_IDChanging(value);
				this.SendPropertyChanging();
				this._WO_ID = value;
				this.SendPropertyChanged("WO_ID");
				this.OnWO_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WO_DATE", DbType="Date NOT NULL")]
	public System.DateTime WO_DATE
	{
		get
		{
			return this._WO_DATE;
		}
		set
		{
			if ((this._WO_DATE != value))
			{
				this.OnWO_DATEChanging(value);
				this.SendPropertyChanging();
				this._WO_DATE = value;
				this.SendPropertyChanged("WO_DATE");
				this.OnWO_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WO_STARTTIME", DbType="NVarChar(10)")]
	public string WO_STARTTIME
	{
		get
		{
			return this._WO_STARTTIME;
		}
		set
		{
			if ((this._WO_STARTTIME != value))
			{
				this.OnWO_STARTTIMEChanging(value);
				this.SendPropertyChanging();
				this._WO_STARTTIME = value;
				this.SendPropertyChanged("WO_STARTTIME");
				this.OnWO_STARTTIMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WO_DUR", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string WO_DUR
	{
		get
		{
			return this._WO_DUR;
		}
		set
		{
			if ((this._WO_DUR != value))
			{
				this.OnWO_DURChanging(value);
				this.SendPropertyChanging();
				this._WO_DUR = value;
				this.SendPropertyChanged("WO_DUR");
				this.OnWO_DURChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLERK_ID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string CLERK_ID
	{
		get
		{
			return this._CLERK_ID;
		}
		set
		{
			if ((this._CLERK_ID != value))
			{
				if (this._CLERK.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCLERK_IDChanging(value);
				this.SendPropertyChanging();
				this._CLERK_ID = value;
				this.SendPropertyChanged("CLERK_ID");
				this.OnCLERK_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TECH_ID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string TECH_ID
	{
		get
		{
			return this._TECH_ID;
		}
		set
		{
			if ((this._TECH_ID != value))
			{
				if (this._TECHNICIAN.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTECH_IDChanging(value);
				this.SendPropertyChanging();
				this._TECH_ID = value;
				this.SendPropertyChanged("TECH_ID");
				this.OnTECH_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRC_ID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string MRC_ID
	{
		get
		{
			return this._MRC_ID;
		}
		set
		{
			if ((this._MRC_ID != value))
			{
				if (this._MR_CODE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMRC_IDChanging(value);
				this.SendPropertyChanging();
				this._MRC_ID = value;
				this.SendPropertyChanged("MRC_ID");
				this.OnMRC_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLERK_WORK_ORDER", Storage="_CLERK", ThisKey="CLERK_ID", OtherKey="CLERK_ID", IsForeignKey=true)]
	public CLERK CLERK
	{
		get
		{
			return this._CLERK.Entity;
		}
		set
		{
			CLERK previousValue = this._CLERK.Entity;
			if (((previousValue != value) 
						|| (this._CLERK.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CLERK.Entity = null;
					previousValue.WORK_ORDERs.Remove(this);
				}
				this._CLERK.Entity = value;
				if ((value != null))
				{
					value.WORK_ORDERs.Add(this);
					this._CLERK_ID = value.CLERK_ID;
				}
				else
				{
					this._CLERK_ID = default(string);
				}
				this.SendPropertyChanged("CLERK");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TECHNICIAN_WORK_ORDER", Storage="_TECHNICIAN", ThisKey="TECH_ID", OtherKey="TECH_ID", IsForeignKey=true)]
	public TECHNICIAN TECHNICIAN
	{
		get
		{
			return this._TECHNICIAN.Entity;
		}
		set
		{
			TECHNICIAN previousValue = this._TECHNICIAN.Entity;
			if (((previousValue != value) 
						|| (this._TECHNICIAN.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TECHNICIAN.Entity = null;
					previousValue.WORK_ORDERs.Remove(this);
				}
				this._TECHNICIAN.Entity = value;
				if ((value != null))
				{
					value.WORK_ORDERs.Add(this);
					this._TECH_ID = value.TECH_ID;
				}
				else
				{
					this._TECH_ID = default(string);
				}
				this.SendPropertyChanged("TECHNICIAN");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MR_CODE_WORK_ORDER", Storage="_MR_CODE", ThisKey="MRC_ID", OtherKey="MRC_ID", IsForeignKey=true)]
	public MR_CODE MR_CODE
	{
		get
		{
			return this._MR_CODE.Entity;
		}
		set
		{
			MR_CODE previousValue = this._MR_CODE.Entity;
			if (((previousValue != value) 
						|| (this._MR_CODE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MR_CODE.Entity = null;
					previousValue.WORK_ORDERs.Remove(this);
				}
				this._MR_CODE.Entity = value;
				if ((value != null))
				{
					value.WORK_ORDERs.Add(this);
					this._MRC_ID = value.MRC_ID;
				}
				else
				{
					this._MRC_ID = default(string);
				}
				this.SendPropertyChanged("MR_CODE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REAL_CUSTOMER")]
public partial class REAL_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _RCST_ID;
	
	private string _RCST_CODE;
	
	private string _RCST_LNAME;
	
	private string _RCST_FNAME;
	
	private string _RCST_MOBILE;
	
	private string _RCST_TEL;
	
	private string _RCST_EMAIL;
	
	private string _RCST_ADD;
	
	private string _LCST_ID;
	
	private EntitySet<MR_CODE> _MR_CODEs;
	
	private EntityRef<LEGAL_CUSTOMER> _LEGAL_CUSTOMER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRCST_IDChanging(string value);
    partial void OnRCST_IDChanged();
    partial void OnRCST_CODEChanging(string value);
    partial void OnRCST_CODEChanged();
    partial void OnRCST_LNAMEChanging(string value);
    partial void OnRCST_LNAMEChanged();
    partial void OnRCST_FNAMEChanging(string value);
    partial void OnRCST_FNAMEChanged();
    partial void OnRCST_MOBILEChanging(string value);
    partial void OnRCST_MOBILEChanged();
    partial void OnRCST_TELChanging(string value);
    partial void OnRCST_TELChanged();
    partial void OnRCST_EMAILChanging(string value);
    partial void OnRCST_EMAILChanged();
    partial void OnRCST_ADDChanging(string value);
    partial void OnRCST_ADDChanged();
    partial void OnLCST_IDChanging(string value);
    partial void OnLCST_IDChanged();
    #endregion
	
	public REAL_CUSTOMER()
	{
		this._MR_CODEs = new EntitySet<MR_CODE>(new Action<MR_CODE>(this.attach_MR_CODEs), new Action<MR_CODE>(this.detach_MR_CODEs));
		this._LEGAL_CUSTOMER = default(EntityRef<LEGAL_CUSTOMER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_ID", DbType="NChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string RCST_ID
	{
		get
		{
			return this._RCST_ID;
		}
		set
		{
			if ((this._RCST_ID != value))
			{
				this.OnRCST_IDChanging(value);
				this.SendPropertyChanging();
				this._RCST_ID = value;
				this.SendPropertyChanged("RCST_ID");
				this.OnRCST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_CODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string RCST_CODE
	{
		get
		{
			return this._RCST_CODE;
		}
		set
		{
			if ((this._RCST_CODE != value))
			{
				this.OnRCST_CODEChanging(value);
				this.SendPropertyChanging();
				this._RCST_CODE = value;
				this.SendPropertyChanged("RCST_CODE");
				this.OnRCST_CODEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_LNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string RCST_LNAME
	{
		get
		{
			return this._RCST_LNAME;
		}
		set
		{
			if ((this._RCST_LNAME != value))
			{
				this.OnRCST_LNAMEChanging(value);
				this.SendPropertyChanging();
				this._RCST_LNAME = value;
				this.SendPropertyChanged("RCST_LNAME");
				this.OnRCST_LNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_FNAME", DbType="NVarChar(50)")]
	public string RCST_FNAME
	{
		get
		{
			return this._RCST_FNAME;
		}
		set
		{
			if ((this._RCST_FNAME != value))
			{
				this.OnRCST_FNAMEChanging(value);
				this.SendPropertyChanging();
				this._RCST_FNAME = value;
				this.SendPropertyChanged("RCST_FNAME");
				this.OnRCST_FNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_MOBILE", DbType="NChar(11)")]
	public string RCST_MOBILE
	{
		get
		{
			return this._RCST_MOBILE;
		}
		set
		{
			if ((this._RCST_MOBILE != value))
			{
				this.OnRCST_MOBILEChanging(value);
				this.SendPropertyChanging();
				this._RCST_MOBILE = value;
				this.SendPropertyChanged("RCST_MOBILE");
				this.OnRCST_MOBILEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_TEL", DbType="NChar(15) NOT NULL", CanBeNull=false)]
	public string RCST_TEL
	{
		get
		{
			return this._RCST_TEL;
		}
		set
		{
			if ((this._RCST_TEL != value))
			{
				this.OnRCST_TELChanging(value);
				this.SendPropertyChanging();
				this._RCST_TEL = value;
				this.SendPropertyChanged("RCST_TEL");
				this.OnRCST_TELChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_EMAIL", DbType="NVarChar(30)")]
	public string RCST_EMAIL
	{
		get
		{
			return this._RCST_EMAIL;
		}
		set
		{
			if ((this._RCST_EMAIL != value))
			{
				this.OnRCST_EMAILChanging(value);
				this.SendPropertyChanging();
				this._RCST_EMAIL = value;
				this.SendPropertyChanged("RCST_EMAIL");
				this.OnRCST_EMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_ADD", DbType="NVarChar(50)")]
	public string RCST_ADD
	{
		get
		{
			return this._RCST_ADD;
		}
		set
		{
			if ((this._RCST_ADD != value))
			{
				this.OnRCST_ADDChanging(value);
				this.SendPropertyChanging();
				this._RCST_ADD = value;
				this.SendPropertyChanged("RCST_ADD");
				this.OnRCST_ADDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCST_ID", DbType="NChar(10)")]
	public string LCST_ID
	{
		get
		{
			return this._LCST_ID;
		}
		set
		{
			if ((this._LCST_ID != value))
			{
				if (this._LEGAL_CUSTOMER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLCST_IDChanging(value);
				this.SendPropertyChanging();
				this._LCST_ID = value;
				this.SendPropertyChanged("LCST_ID");
				this.OnLCST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REAL_CUSTOMER_MR_CODE", Storage="_MR_CODEs", ThisKey="RCST_ID", OtherKey="RCST_ID")]
	public EntitySet<MR_CODE> MR_CODEs
	{
		get
		{
			return this._MR_CODEs;
		}
		set
		{
			this._MR_CODEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LEGAL_CUSTOMER_REAL_CUSTOMER", Storage="_LEGAL_CUSTOMER", ThisKey="LCST_ID", OtherKey="LCST_ID", IsForeignKey=true)]
	public LEGAL_CUSTOMER LEGAL_CUSTOMER
	{
		get
		{
			return this._LEGAL_CUSTOMER.Entity;
		}
		set
		{
			LEGAL_CUSTOMER previousValue = this._LEGAL_CUSTOMER.Entity;
			if (((previousValue != value) 
						|| (this._LEGAL_CUSTOMER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LEGAL_CUSTOMER.Entity = null;
					previousValue.REAL_CUSTOMERs.Remove(this);
				}
				this._LEGAL_CUSTOMER.Entity = value;
				if ((value != null))
				{
					value.REAL_CUSTOMERs.Add(this);
					this._LCST_ID = value.LCST_ID;
				}
				else
				{
					this._LCST_ID = default(string);
				}
				this.SendPropertyChanged("LEGAL_CUSTOMER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.REAL_CUSTOMER = this;
	}
	
	private void detach_MR_CODEs(MR_CODE entity)
	{
		this.SendPropertyChanging();
		entity.REAL_CUSTOMER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MR_CODE")]
public partial class MR_CODE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MRC_ID;
	
	private string _RCST_ID;
	
	private string _LAPTOP_ID;
	
	private string _PROBLEM_ID;
	
	private System.DateTime _MRC_SDATE;
	
	private System.Nullable<System.DateTime> _MRC_FDATE;
	
	private System.Nullable<System.DateTime> _MRC_Deldate;
	
	private EntitySet<WORK_ORDER> _WORK_ORDERs;
	
	private EntityRef<LAPTOP> _LAPTOP;
	
	private EntityRef<PROBLEM> _PROBLEM;
	
	private EntityRef<REAL_CUSTOMER> _REAL_CUSTOMER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMRC_IDChanging(string value);
    partial void OnMRC_IDChanged();
    partial void OnRCST_IDChanging(string value);
    partial void OnRCST_IDChanged();
    partial void OnLAPTOP_IDChanging(string value);
    partial void OnLAPTOP_IDChanged();
    partial void OnPROBLEM_IDChanging(string value);
    partial void OnPROBLEM_IDChanged();
    partial void OnMRC_SDATEChanging(System.DateTime value);
    partial void OnMRC_SDATEChanged();
    partial void OnMRC_FDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnMRC_FDATEChanged();
    partial void OnMRC_DeldateChanging(System.Nullable<System.DateTime> value);
    partial void OnMRC_DeldateChanged();
    #endregion
	
	public MR_CODE()
	{
		this._WORK_ORDERs = new EntitySet<WORK_ORDER>(new Action<WORK_ORDER>(this.attach_WORK_ORDERs), new Action<WORK_ORDER>(this.detach_WORK_ORDERs));
		this._LAPTOP = default(EntityRef<LAPTOP>);
		this._PROBLEM = default(EntityRef<PROBLEM>);
		this._REAL_CUSTOMER = default(EntityRef<REAL_CUSTOMER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRC_ID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MRC_ID
	{
		get
		{
			return this._MRC_ID;
		}
		set
		{
			if ((this._MRC_ID != value))
			{
				this.OnMRC_IDChanging(value);
				this.SendPropertyChanging();
				this._MRC_ID = value;
				this.SendPropertyChanged("MRC_ID");
				this.OnMRC_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCST_ID", DbType="NChar(6) NOT NULL", CanBeNull=false)]
	public string RCST_ID
	{
		get
		{
			return this._RCST_ID;
		}
		set
		{
			if ((this._RCST_ID != value))
			{
				if (this._REAL_CUSTOMER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRCST_IDChanging(value);
				this.SendPropertyChanging();
				this._RCST_ID = value;
				this.SendPropertyChanged("RCST_ID");
				this.OnRCST_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAPTOP_ID", DbType="NChar(6) NOT NULL", CanBeNull=false)]
	public string LAPTOP_ID
	{
		get
		{
			return this._LAPTOP_ID;
		}
		set
		{
			if ((this._LAPTOP_ID != value))
			{
				if (this._LAPTOP.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLAPTOP_IDChanging(value);
				this.SendPropertyChanging();
				this._LAPTOP_ID = value;
				this.SendPropertyChanged("LAPTOP_ID");
				this.OnLAPTOP_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROBLEM_ID", DbType="NChar(2) NOT NULL", CanBeNull=false)]
	public string PROBLEM_ID
	{
		get
		{
			return this._PROBLEM_ID;
		}
		set
		{
			if ((this._PROBLEM_ID != value))
			{
				if (this._PROBLEM.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPROBLEM_IDChanging(value);
				this.SendPropertyChanging();
				this._PROBLEM_ID = value;
				this.SendPropertyChanged("PROBLEM_ID");
				this.OnPROBLEM_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRC_SDATE", DbType="Date NOT NULL")]
	public System.DateTime MRC_SDATE
	{
		get
		{
			return this._MRC_SDATE;
		}
		set
		{
			if ((this._MRC_SDATE != value))
			{
				this.OnMRC_SDATEChanging(value);
				this.SendPropertyChanging();
				this._MRC_SDATE = value;
				this.SendPropertyChanged("MRC_SDATE");
				this.OnMRC_SDATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRC_FDATE", DbType="Date")]
	public System.Nullable<System.DateTime> MRC_FDATE
	{
		get
		{
			return this._MRC_FDATE;
		}
		set
		{
			if ((this._MRC_FDATE != value))
			{
				this.OnMRC_FDATEChanging(value);
				this.SendPropertyChanging();
				this._MRC_FDATE = value;
				this.SendPropertyChanged("MRC_FDATE");
				this.OnMRC_FDATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRC_Deldate", DbType="Date")]
	public System.Nullable<System.DateTime> MRC_Deldate
	{
		get
		{
			return this._MRC_Deldate;
		}
		set
		{
			if ((this._MRC_Deldate != value))
			{
				this.OnMRC_DeldateChanging(value);
				this.SendPropertyChanging();
				this._MRC_Deldate = value;
				this.SendPropertyChanged("MRC_Deldate");
				this.OnMRC_DeldateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MR_CODE_WORK_ORDER", Storage="_WORK_ORDERs", ThisKey="MRC_ID", OtherKey="MRC_ID")]
	public EntitySet<WORK_ORDER> WORK_ORDERs
	{
		get
		{
			return this._WORK_ORDERs;
		}
		set
		{
			this._WORK_ORDERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_MR_CODE", Storage="_LAPTOP", ThisKey="LAPTOP_ID", OtherKey="LAPTOP_ID", IsForeignKey=true)]
	public LAPTOP LAPTOP
	{
		get
		{
			return this._LAPTOP.Entity;
		}
		set
		{
			LAPTOP previousValue = this._LAPTOP.Entity;
			if (((previousValue != value) 
						|| (this._LAPTOP.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LAPTOP.Entity = null;
					previousValue.MR_CODEs.Remove(this);
				}
				this._LAPTOP.Entity = value;
				if ((value != null))
				{
					value.MR_CODEs.Add(this);
					this._LAPTOP_ID = value.LAPTOP_ID;
				}
				else
				{
					this._LAPTOP_ID = default(string);
				}
				this.SendPropertyChanged("LAPTOP");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROBLEM_MR_CODE", Storage="_PROBLEM", ThisKey="PROBLEM_ID", OtherKey="PROBLEM_ID", IsForeignKey=true)]
	public PROBLEM PROBLEM
	{
		get
		{
			return this._PROBLEM.Entity;
		}
		set
		{
			PROBLEM previousValue = this._PROBLEM.Entity;
			if (((previousValue != value) 
						|| (this._PROBLEM.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PROBLEM.Entity = null;
					previousValue.MR_CODEs.Remove(this);
				}
				this._PROBLEM.Entity = value;
				if ((value != null))
				{
					value.MR_CODEs.Add(this);
					this._PROBLEM_ID = value.PROBLEM_ID;
				}
				else
				{
					this._PROBLEM_ID = default(string);
				}
				this.SendPropertyChanged("PROBLEM");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="REAL_CUSTOMER_MR_CODE", Storage="_REAL_CUSTOMER", ThisKey="RCST_ID", OtherKey="RCST_ID", IsForeignKey=true)]
	public REAL_CUSTOMER REAL_CUSTOMER
	{
		get
		{
			return this._REAL_CUSTOMER.Entity;
		}
		set
		{
			REAL_CUSTOMER previousValue = this._REAL_CUSTOMER.Entity;
			if (((previousValue != value) 
						|| (this._REAL_CUSTOMER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._REAL_CUSTOMER.Entity = null;
					previousValue.MR_CODEs.Remove(this);
				}
				this._REAL_CUSTOMER.Entity = value;
				if ((value != null))
				{
					value.MR_CODEs.Add(this);
					this._RCST_ID = value.RCST_ID;
				}
				else
				{
					this._RCST_ID = default(string);
				}
				this.SendPropertyChanged("REAL_CUSTOMER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.MR_CODE = this;
	}
	
	private void detach_WORK_ORDERs(WORK_ORDER entity)
	{
		this.SendPropertyChanging();
		entity.MR_CODE = null;
	}
}
#pragma warning restore 1591
